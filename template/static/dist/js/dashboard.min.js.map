{"version":3,"sources":["utils.jsx","auth.jsx","validation.jsx","dashboard.jsx","profile.jsx","settings.jsx","settings_contacts.jsx","main.jsx"],"names":["removeFromList","l","o","n","i","length","push","authenticate","email","password","cb","r","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","data","JSON","parse","responseText","Result","authenticated","token","getResponseHeader","id","errors","Messages","send","stringify","logout","console","log","passwordValid","validateEmail","re","test","request","call","method","url","auth","getToken","status","remove","this","get","patch","post","put","AuthenticationMixin","statics","willTransitionTo","transition","nextPath","path","loggedIn","redirect","Login","React","createClass","displayName","contextTypes","router","PropTypes","func","isRequired","getInitialState","getDefaultProps","messages","validationEmailState","state","validationPasswordState","handleChange","setState","refs","getValue","handleSubmit","event","preventDefault","$__0","context","getCurrentQuery","login","replaceWith","bind","render","msgs","props","forEach","msg","createElement","type","Type","message","Content","className","onSubmit","Input","label","ref","placeholder","value","autoFocus","hasFeedback","bsStyle","onChange","Button","Logout","componentDidMount","arguments","localStorage","undefined","res","DashboardHolder","mixins","Link","to","RouteHandler","DashboardOverview","DashboardServers","DashboardApps","ProfileHolder","ProfilePassword","password_confirm","validationPasswordConfirmState","user","updatePassword","success","callback","processPatch","SettingsHolder","SettingsCommands","SettingsServers","SettingsTimePeriods","contacts","init","$","addClass","close","removeClass","processGet","Data","getAll","processGetAll","add","name","processAdd","processRemove","update","processUpdate","groups","SettingsContactsMixin","componentWillUnmount","SettingsContactsHolder","SettingsContacts","SettingsContactsGroups","SettingsContactsList","propTypes","array","componentWillMount","removeGroup","group","SettingsContactsGroupLine","Table","striped","hover","handleDelete","bsSize","onClick","params","groupId","removeContact","contact","SettingsContactsLine","contactId","SettingsContactsForm","action","handleGet","validateNameState","validateEmailState","handleFormResponse","SettingsContactsGroupForm","Router","ReactRouter","Route","DefaultRoute","Redirect","NotFoundRoute","ReactBootstrap","App","setStateOnAuth","Navbar","Nav","NavItem","accessLink","href","brand","fixedTop","fluid","inverse","right","visible","handleDismiss","Alert","onDismiss","NotFound","routes","handler","from","run","Handler","document","body"],"mappings":"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","file":"dashboard.min.js","sourcesContent":["var request = {\n    call : function(method, url, cb) {\n        var r = new XMLHttpRequest();\n        r.open(method, url, true);\n        r.setRequestHeader(\"Content-Type\", \"application/json\");\n        r.setRequestHeader(\"X-Access-Token\", auth.getToken());\n        r.onreadystatechange = function() {\n            if (r.readyState === 4) {\n                if (r.status == 401) {\n                    auth.logout();\n                } else {\n                    data = JSON.parse(r.responseText);\n                    if (cb) {\n                        cb(data);\n                    }\n                }\n            }\n        };\n        return r\n    },\n    remove: function(url, cb) {\n        var r = this.call(\"DELETE\", url, cb);\n        r.send();\n    },\n    get: function(url, cb) {\n        var r = this.call(\"GET\", url, cb);\n        r.send();\n    },\n    patch: function(url, data, cb) {\n        var r = this.call(\"PATH\", url, cb);\n        r.send(JSON.stringify(data));\n    },\n    post: function(url, data, cb) {\n        var r = this.call(\"POST\", url, cb);\n        r.send(JSON.stringify(data));\n    },\n    put: function(url, data, cb) {\n        var r = this.call(\"PUT\", url, cb);\n        r.send(JSON.stringify(data));\n    }\n}\n\nfunction removeFromList(l, o) {\n    var n = [];\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] != o) {\n            n.push(l[i]);\n        }\n    }\n    return n;\n}\n","var AuthenticationMixin = {\n    statics: {\n        willTransitionTo: function(transition) {\n            var nextPath = transition.path;\n            if (!auth.loggedIn()) {\n                transition.redirect(\"/login\", {}, {\"nextPath\": nextPath});\n            }\n        }\n    }\n};\n\nvar Login = React.createClass({\n    contextTypes: {\n        router: React.PropTypes.func.isRequired\n    },\n    getInitialState: function() {\n        return {\n            email: '',\n            password: ''\n        };\n    },\n    getDefaultProps: function() {\n        return {\n            messages: []\n        }\n    },\n    validationEmailState: function() {\n        if (this.state.email.length > 0) {\n            if (validateEmail(this.state.email) === true) {\n                return \"success\";\n            }\n            return \"error\"\n        }\n    },\n    validationPasswordState: function() {\n        if (this.state.password.length > 0) {\n            if (passwordValid(this.state.password)) {\n                return \"success\";\n            }\n            return \"error\";\n        }\n    },\n    handleChange: function() {\n        this.setState({\n            email: this.refs.email.getValue(),\n            password: this.refs.password.getValue()\n        });\n    },\n    handleSubmit: function(event) {\n        event.preventDefault();\n        var { router } = this.context;\n        var nextPath = router.getCurrentQuery().nextPath;\n        // Prevent form being submitted till elements are in valid state\n        auth.login(this.state.email, this.state.password, function(loggedIn) {\n            if (nextPath) {\n                router.replaceWith(nextPath);\n            } else {\n                router.replaceWith(\"/\");\n            }\n        }.bind(this));\n    },\n    render: function() {\n        var msgs = [];\n        this.props.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-3 col-md-offset-5 main\">\n                        {msgs}\n                        <h1 className=\"page-header\">Sign In</h1>\n                        <form onSubmit={this.handleSubmit} className=\"text-left\">\n                            <Input label=\"Email Address\" type=\"email\" ref=\"email\"\n                                   placeholder=\"Enter email\" value={this.state.email}\n                                   autoFocus hasFeedback bsStyle={this.validationEmailState()}\n                                   onChange={this.handleChange} />\n                            <Input label=\"Password\" type=\"password\" ref=\"password\"\n                                   placeholder=\"Password\" value={this.state.password}\n                                   hasFeedback bsStyle={this.validationPasswordState()}\n                                   onChange={this.handleChange} />\n                            <Button type=\"submit\" bsStyle=\"success\">\n                                Sign In\n                            </Button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar Logout = React.createClass({\n    componentDidMount: function() {\n        auth.logout();\n    },\n    render: function() {\n        return (\n            <div className=\"col-md-3 col-md-offset-3\">\n                <h1>Signed Out</h1>\n                <p>You are now signed out!</p>\n            </div>\n        );\n    }\n});\n\nvar auth = {\n    login: function(email, password, cb) {\n        cb = arguments[arguments.length - 1];\n        if (localStorage.token) {\n            if (cb) cb(true);\n            this.onChange(true);\n            return ;\n        }\n        if (email === undefined || password == undefined) {\n            if (cb) cb(false);\n            return ;\n        }\n        authenticate(email, password, function(res) {\n            if (res.authenticated) {\n                localStorage.token = res.token;\n                localStorage.id = res.id;\n                if (cb) cb(true);\n                this.onChange(true, res.errors);\n            } else {\n                if (cb) cb(false);\n                this.onChange(false, res.errors);\n            }\n        }.bind(this));\n    },\n    getToken: function() {\n        return localStorage.token;\n    },\n    logout: function(cb) {\n        logout(localStorage.token);\n        delete localStorage.token;\n        if (cb) cb(false);\n        this.onChange(false);\n    },\n    loggedIn: function() {\n        return !!localStorage.token;\n    },\n    onChange: function() {}\n};\n\nfunction authenticate(email, password, cb) {\n    var r = new XMLHttpRequest();\n    r.open(\"POST\", \"/api/v1/auth/login\", true);\n    r.setRequestHeader(\"Content-Type\", \"application/json\");\n    r.onreadystatechange = function() {\n        if (r.readyState === 4) {\n            data = JSON.parse(r.responseText);\n            if (data.Result === \"success\") {\n                cb({\n                    authenticated: true,\n                    token: r.getResponseHeader(\"X-Access-Token\"),\n                    id: data.data\n                });\n            } else {\n                cb({\n                    authenticated: false,\n                    errors: data.Messages\n                });\n            }\n        }\n    };\n    r.send(JSON.stringify({email: email, password: password}));\n}\n\nfunction logout(token) {\n    var r = new XMLHttpRequest();\n    r.open(\"GET\", \"/api/v1/auth/logout\", true);\n    r.setRequestHeader(\"Content-Type\", \"application/json\");\n    r.setRequestHeader(\"X-Access-Token\", token);\n    r.onreadystatechange = function() {\n        if (r.readyState === 4) {\n            data = JSON.parse(r.responseText);\n            if (data.Result === \"success\") {\n                console.log(\"successfully logged out\");\n            } else {\n                console.log(\"failed to logout!\");\n            }\n        }\n    };\n    r.send();\n}\n","function passwordValid(password) {\n    if (password.length >= 8) {\n        return true;\n    }\n    return false;\n}\n\nfunction validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n","var DashboardHolder = React.createClass({\n    mixins: [AuthenticationMixin],\n    getInitialState: function() {\n        return {\n            messages: []\n        };\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type=\"error\" message={msg} />);\n        });\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 col-md-2 sidebar\">\n                        <ul className=\"nav nav-sidebar\">\n                            <li><Link to=\"d_overview\">Overview</Link></li>\n                            <li><Link to=\"d_servers\">Servers</Link></li>\n                            <li><Link to=\"d_apps\">Applications</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10\n                                    col-md-offset-2 main\">\n                        {msgs}\n                        <RouteHandler />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar DashboardOverview = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Dashboard Overview...\n            </div>\n        );\n    }\n});\n\nvar DashboardServers = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Dashboard Servers...\n            </div>\n        );\n    }\n});\n\nvar DashboardApps = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Dashboard Apps...\n            </div>\n        );\n    }\n});\n","var ProfileHolder = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 col-md-2 sidebar\">\n                        <h1>Profile</h1>\n                        <ul className=\"nav nav-sidebar\">\n                            <li><Link to=\"p_password\">Password</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n                        <RouteHandler />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar ProfilePassword = React.createClass({\n    mixins: [AuthenticationMixin],\n    getInitialState: function() {\n        return {\n            password: '',\n            password_confirm: '',\n            messages: []\n        };\n    },\n    validationPasswordState: function() {\n        if (this.state.password.length > 0) {\n            if (passwordValid(this.state.password)) {\n                return \"success\";\n            }\n            return \"error\";\n        }\n    },\n    validationPasswordConfirmState: function() {\n        if (this.state.password_confirm.length > 0 || this.state.password.length > 0) {\n            if (this.state.password_confirm === this.state.password) {\n                return \"success\";\n            }\n            return \"error\";\n        }\n    },\n    handleChange: function() {\n        this.setState({\n            password: this.refs.password.getValue(),\n            password_confirm: this.refs.password_confirm.getValue()\n        });\n    },\n    handleSubmit: function(event) {\n        event.preventDefault();\n        if (this.state.password.length < 1) {\n            this.setState({\"messages\": [{Type: \"danger\", Content: \"Password is required.\"}]});\n            return ;\n        }\n        if (this.validationPasswordState() !== \"success\" || this.validationPasswordConfirmState() !== \"success\") {\n            this.setState({\"messages\": [{Type: \"danger\", Content: \"Fix errors\"}]});\n            return ;\n        }\n        user.updatePassword(this.state.password, function(success, messages) {\n            if (success === true) {\n                this.setState({messages: messages, password: \"\", password_confirm: \"\"});\n            } else {\n                this.setState({\n                    messages: messages,\n                    password: this.state.password,\n                    password_confirm: this.state.password_confirm\n                });\n                console.log(this.state.messages);\n            }\n        }.bind(this));\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        return (\n            <div className=\"col-md-3\">\n                <form onSubmit={this.handleSubmit} className=\"text-left\">\n                    <h1 className=\"page-header\">Reset Password</h1>\n                    {msgs}\n                    <Input label=\"New Password\" type=\"password\" ref=\"password\"\n                           placeholder=\"New password\" value={this.state.password}\n                           autoFocus hasFeedback bsStyle={this.validationPasswordState()}\n                           onChange={this.handleChange} />\n                    <Input label=\"Confirm Password\" type=\"password\" ref=\"password_confirm\"\n                           placeholder=\"Confirm Password\" value={this.state.password_confirm}\n                           hasFeedback bsStyle={this.validationPasswordConfirmState()}\n                           onChange={this.handleChange} />\n                    <Button type=\"submit\" bsStyle=\"success\">\n                        Update Password\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n});\n\nvar user = {\n    updatePassword: function(password, cb) {\n        callback = cb;\n        if (!localStorage.id) {\n            if (callback) callback(false);\n            return ;\n        }\n        if (password.length < 1) {\n            if (callback) callback(false, [\"Password is required.\"]);\n            return ;\n        }\n        request.patch(\n            \"/api/v1/user/\" + localStorage.id,\n            {password: password},\n            this.processPatch\n        )\n    },\n    processPatch: function(res) {\n        if (res.Result == \"success\") {\n            if (callback) callback(true, [{\n                Type: \"success\",\n                Content: \"Successfully updated password.\"\n            }]);\n        } else {\n            if (callback) callback(false, res.errors);\n        }\n    }\n};\n","var SettingsHolder = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 col-md-2 sidebar\">\n                        <h1>Settings</h1>\n                        <ul className=\"nav nav-sidebar\">\n                            <li><Link to=\"s_commands\">Commands</Link></li>\n                            <li><Link to=\"s_contacts_list\" className=\"contacts-link\">Contacts</Link></li>\n                            <li><Link to=\"s_servers\">Servers</Link></li>\n                            <li>\n                                <Link to=\"s_timeperiods\">Time Periods</Link>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10\n                                    col-md-offset-2 main\">\n                        {/*<Messages type=\"success\" message=\"Hello World\" />*/}\n                        <RouteHandler />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar SettingsCommands = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Settings Commands...\n            </div>\n        );\n    }\n});\n\nvar SettingsServers = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Settings Servers...\n            </div>\n        );\n    }\n});\n\nvar SettingsTimePeriods = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Settings Time Periods...\n            </div>\n        );\n    }\n});\n","var contacts = {\n    init: function() {\n        $(\".contacts-link\").addClass(\"active\");\n    },\n    close: function() {\n        $(\".contacts-link\").removeClass(\"active\");\n    },\n    get: function(id, cb) {\n        callback = cb;\n        request.get(\"/api/v1/contacts/\" + id, this.processGet);\n    },\n    processGet: function(cb) {\n        if (data.Result === \"success\") {\n            callback(data.Data, []);\n        } else {\n            callback([], data.Messages);\n        }\n    },\n    getAll: function(cb) {\n        callback = cb;\n        request.get(\"/api/v1/contacts/\", this.processGetAll);\n    },\n    processGetAll: function(data) {\n        if (data.Result === \"success\") {\n            callback(data.Data, []);\n        } else {\n            callback({data: [], errors: data.Messages});\n        }\n    },\n    add: function(name, email, cb) {\n        callback = cb;\n        request.post(\n            \"/api/v1/contacts/\",\n            {name: name, email: email},\n            this.processAdd\n        );\n    },\n    processAdd: function(res) {\n        if (res.Result == \"success\") {\n            if (callback) callback(true, [{\n                Type: \"success\",\n                Content: \"Successfully added contact.\"\n            }]);\n        } else {\n            if (callback) callback(false, res.Messages);\n        }\n    },\n    remove: function(id, cb) {\n        callback = cb\n        request.remove(\n            \"/api/v1/contacts/\" + id,\n            this.processRemove\n        );\n    },\n    processRemove: function(res) {\n        if (res.Result == \"success\") {\n            if (callback) callback([{\n                Type: \"success\",\n                Content: \"Successfully removed contact.\"\n            }]);\n        } else {\n            if (callback) callback(res.Messages);\n        }\n    },\n    update: function(id, name, email, cb) {\n        callback = cb;\n        request.put(\n            \"/api/v1/contacts/\" + id,\n            {name: name, email: email},\n            this.processUpdate\n        );\n    },\n    processUpdate: function(res) {\n        if (res.Result == \"success\") {\n            if (callback) callback(true, [{\n                Type: \"success\",\n                Content: \"Successfully updated contact.\"\n            }]);\n        } else {\n            if (callback) callback(false, res.Messages);\n        }\n    }\n}\n\nvar groups = {\n    get: function(id, cb) {\n        callback = cb;\n        request.get(\"/api/v1/contacts/group/\" + id, this.processGet);\n    },\n    processGet: function(cb) {\n        if (data.Result === \"success\") {\n            callback(data.Data, []);\n        } else {\n            console.log(data);\n            callback([], data.Messages);\n        }\n    },\n    getAll: function(cb) {\n        callback = cb;\n        request.get(\"/api/v1/contacts/group/\", this.processGetAll);\n    },\n    processGetAll: function(data) {\n        if (data.Result === \"success\") {\n            callback(data.Data, []);\n        } else {\n            callback({data: [], errors: data.Messages});\n        }\n    },\n    add: function(name, email, cb) {\n        callback = cb;\n        request.post(\n            \"/api/v1/contacts/group/\",\n            {name: name},\n            this.processAdd\n        );\n    },\n    processAdd: function(res) {\n        if (res.Result == \"success\") {\n            if (callback) callback(true, [{\n                Type: \"success\",\n                Content: \"Successfully added contact group.\"\n            }]);\n        } else {\n            if (callback) callback(false, res.Messages);\n        }\n    },\n    remove: function(id, cb) {\n        callback = cb\n        request.remove(\n            \"/api/v1/contacts/group/\" + id,\n            this.processRemove\n        );\n    },\n    processRemove: function(res) {\n        if (res.Result == \"success\") {\n            if (callback) callback([{\n                Type: \"success\",\n                Content: \"Successfully removed contact group.\"\n            }]);\n        } else {\n            if (callback) callback(res.Messages);\n        }\n    },\n    update: function(id, name, cb) {\n        callback = cb;\n        request.put(\n            \"/api/v1/contacts/group/\" + id,\n            {name: name},\n            this.processUpdate\n        );\n    },\n    processUpdate: function(res) {\n        if (res.Result == \"success\") {\n            if (callback) callback(true, [{\n                Type: \"success\",\n                Content: \"Successfully updated contact group.\"\n            }]);\n        } else {\n            if (callback) callback(false, res.Messages);\n        }\n    }\n}\n\nvar SettingsContactsMixin = {\n    componentDidMount: function() {\n        contacts.init();\n    },\n    componentWillUnmount: function() {\n        contacts.close();\n    }\n};\n\nvar SettingsContactsHolder = React.createClass({\n    mixins: [AuthenticationMixin, SettingsContactsMixin],\n    render: function() {\n        return (\n            <div>\n                <h1 className=\"page-header\">Contacts</h1>\n                <RouteHandler />\n            </div>\n        );\n    }\n});\n\nvar SettingsContacts = React.createClass({\n    mixins: [AuthenticationMixin, SettingsContactsMixin],\n    render: function() {\n        return (\n            <div>\n                <SettingsContactsGroups />\n                <SettingsContactsList />\n            </div>\n        )\n    }\n});\n\nvar SettingsContactsGroups = React.createClass({\n    mixins: [AuthenticationMixin, SettingsContactsMixin],\n    propTypes: {\n        groups: React.PropTypes.array,\n        messages: React.PropTypes.array\n    },\n    getInitialState: function() {\n        return {\n            groups: [],\n            messages: []\n        };\n    },\n    componentWillMount: function() {\n        groups.getAll(function(data, messages) {\n            this.setState({\n                groups: data,\n                messages: messages\n            });\n        }.bind(this));\n    },\n    removeGroup: function(contact) {\n        groups.remove(group.id, function(messages) {\n            this.setState({messages: messages})\n        }.bind(this));\n        this.setState({\n            groups: removeFromList(this.state.groups, group)\n        });\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        var groups = [];\n        this.state.groups.forEach(function(group) {\n            groups.push(\n                <SettingsContactsGroupLine group={group}\n                                           removeGroup={this.removeGroup} />\n            );\n        }.bind(this));\n        return (\n            <div>\n                {msgs}\n                <Table striped hover>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {groups}\n                    </tbody>\n                </Table>\n\n                <Link to=\"s_contacts_group_add\"\n                      className=\"btn btn-primary\">Add Group</Link>\n            </div>\n        )\n    }\n});\n\nvar SettingsContactsGroupLine = React.createClass({\n    handleDelete: function() {\n        this.props.removeGroup(this.props.group);\n    },\n    render: function() {\n        return (\n            <tr>\n                <td>{this.props.group.name}</td>\n                <td className=\"action-cell\">\n                    <Button bsSize=\"xsmall\" bsStyle=\"danger\"\n                            onClick={this.handleDelete}>\n                        Delete\n                    </Button>\n                    <Link to=\"s_contacts_group_update\"\n                          params={{\"groupId\": this.props.group.id}}\n                          className=\"btn btn-xs btn-default\">Edit</Link>\n                </td>\n            </tr>\n        );\n    }\n});\n\nvar SettingsContactsList = React.createClass({\n    mixins: [AuthenticationMixin, SettingsContactsMixin],\n    propTypes: {\n        contacts: React.PropTypes.array,\n        messages: React.PropTypes.array\n    },\n    getInitialState: function() {\n        return {\n            contacts: [],\n            messages: []\n        };\n    },\n    componentWillMount: function() {\n        contacts.getAll(function(data, messages) {\n            this.setState({\n                contacts: data,\n                messages: messages\n            });\n        }.bind(this));\n    },\n    removeContact: function(contact) {\n        contacts.remove(contact.id, function(messages) {\n            this.setState({messages: messages})\n        }.bind(this));\n        this.setState({\n            contacts: removeFromList(this.state.contacts, contact)\n        });\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        var contacts = [];\n        this.state.contacts.forEach(function(contact) {\n            contacts.push(<SettingsContactsLine contact={contact} removeContact={this.removeContact} />);\n        }.bind(this));\n        return (\n            <div>\n                {msgs}\n                <Table striped hover>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {contacts}\n                    </tbody>\n                </Table>\n\n                <Link to=\"s_contacts_add\" className=\"btn btn-primary\">Add Contact</Link>\n            </div>\n        );\n    }\n});\n\nvar SettingsContactsLine = React.createClass({\n    handleDelete: function() {\n        this.props.removeContact(this.props.contact);\n    },\n    render: function() {\n        return (\n            <tr>\n                <td>{this.props.contact.name}</td>\n                <td>{this.props.contact.user.email}</td>\n                <td className=\"action-cell\">\n                    <Button bsSize=\"xsmall\" bsStyle=\"danger\"\n                            onClick={this.handleDelete}>\n                        Delete\n                    </Button>\n                    <Link to=\"s_contacts_update\"\n                          params={{\"contactId\": this.props.contact.id}}\n                          className=\"btn btn-xs btn-default\">Edit</Link>\n                </td>\n            </tr>\n        );\n    }\n});\n\nvar SettingsContactsForm = React.createClass({\n    mixins: [AuthenticationMixin, SettingsContactsMixin],\n    getInitialState: function() {\n        return {\n            id: \"\",\n            action: \"Add\",\n            name: \"\",\n            email: \"\",\n            messages: []\n        }\n    },\n    componentDidMount: function() {\n        if (this.props.params.contactId != undefined) {\n            var id = this.props.params.contactId;\n            this.setState({\n                \"id\": id,\n                \"action\": \"Update\"\n            });\n            contacts.get(id, this.handleGet);\n        }\n    },\n    handleGet: function(data, messages) {\n        if (messages.length > 0) {\n            this.setState({messages: messages, name: \"\", email: \"\"});\n        } else {\n            this.setState({\n                messages: messages,\n                name: data.name,\n                email: data.user.email\n            });\n        }\n    },\n    validateNameState: function() {\n        if (this.state.name.length > 0) {\n            if (this.state.name.length > 2) {\n                return \"success\";\n            }\n            return \"error\"\n        }\n    },\n    validateEmailState: function() {\n        if (this.state.email.length > 0) {\n            if (validateEmail(this.state.email) === true) {\n                return \"success\";\n            }\n            return \"error\"\n        }\n    },\n    handleChange: function() {\n        this.setState({\n            name: this.refs.name.getValue(),\n            email: this.refs.email.getValue()\n        });\n    },\n    handleSubmit: function() {\n        event.preventDefault();\n        if (this.state.name.length < 1) {\n            this.setState({\n                messages: [{Type: \"danger\", Content: \"Name is required.\"}]\n            });\n            return ;\n        }\n        if (this.state.email.length < 1) {\n            this.setState({\n                messages: [{Type: \"danger\", Content: \"Email is required.\"}]\n            });\n            return ;\n        }\n        if (this.validateNameState() !== \"success\" || this.validateEmailState() !== \"success\") {\n            this.setState({\n                messages: [{Type: \"danger\", Content: \"Fix errors\"}]\n            });\n            return ;\n        }\n\n        if (this.state.id != \"\") {\n            contacts.update(this.state.id, this.state.name, this.state.email,\n                            this.handleFormResponse);\n        } else {\n            contacts.add(this.state.name, this.state.email,\n                         this.handleFormResponse);\n        }\n    },\n    handleFormResponse: function(success, messages) {\n        if (success == true) {\n            if (this.state.id) {\n                this.setState({messages: messages});\n            } else {\n                this.setState({messages: messages, name: \"\", email: \"\"});\n            }\n        } else {\n            this.setState({\n                messages: messages,\n                name: this.state.name,\n                email: this.state.email\n            });\n        }\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        return (\n            <div className=\"col-md-4\">\n                <form onSubmit={this.handleSubmit} className=\"text-left\">\n                    <h2 className=\"page-header\">{this.state.action} Contact</h2>\n                    {msgs}\n                    <Input label=\"Name\" type=\"text\" ref=\"name\"\n                           placeholder=\"Jane Smart\" value={this.state.name}\n                           autoFocus hasFeedback bsStyle={this.validateNameState()}\n                           onChange={this.handleChange} />\n                    <Input label=\"Email\" type=\"text\" ref=\"email\"\n                           placeholder=\"test@example.com\" value={this.state.email}\n                           hasFeedback bsStyle={this.validateEmailState()}\n                           onChange={this.handleChange} />\n                    <Button type=\"submit\" bsStyle=\"success\">\n                        {this.state.action} Contact\n                    </Button>\n                    <Link to=\"s_contacts_list\" className=\"btn btn-default\">Cancel</Link>\n                </form>\n            </div>\n        );\n    }\n});\n\nvar SettingsContactsGroupForm = React.createClass({\n    mixins: [AuthenticationMixin, SettingsContactsMixin],\n    getInitialState: function() {\n        return {\n            id: \"\",\n            action: \"Add\",\n            name: \"\",\n            messages: []\n        }\n    },\n    componentDidMount: function() {\n        if (this.props.params.groupId != undefined) {\n            var id = this.props.params.groupId;\n            this.setState({\n                \"id\": id,\n                \"action\": \"Update\"\n            });\n            groups.get(id, this.handleGet);\n        }\n    },\n    handleGet: function(data, messages) {\n        if (messages.length > 0) {\n            this.setState({messages: messages, name: \"\"});\n        } else {\n            this.setState({\n                messages: messages,\n                name: data.name\n            });\n        }\n    },\n    validateNameState: function() {\n        if (this.state.name.length > 0) {\n            if (this.state.name.length > 2) {\n                return \"success\";\n            }\n            return \"error\"\n        }\n    },\n    handleChange: function() {\n        this.setState({\n            name: this.refs.name.getValue(),\n        });\n    },\n    handleSubmit: function() {\n        event.preventDefault();\n        if (this.state.name.length < 1) {\n            this.setState({\n                messages: [{Type: \"danger\", Content: \"Name is required.\"}]\n            });\n            return ;\n        }\n        if (this.validateNameState() !== \"success\") {\n            this.setState({\n                messages: [{Type: \"danger\", Content: \"Fix errors\"}]\n            });\n            return ;\n        }\n\n        if (this.state.id != \"\") {\n            groups.update(this.state.id, this.state.name,\n                            this.handleFormResponse);\n        } else {\n            groups.add(this.state.name,\n                         this.handleFormResponse);\n        }\n    },\n    handleFormResponse: function(success, messages) {\n        if (success == true) {\n            if (this.state.id) {\n                this.setState({messages: messages});\n            } else {\n                this.setState({messages: messages, name: \"\"});\n            }\n        } else {\n            this.setState({\n                messages: messages,\n                name: this.state.name\n            });\n        }\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        return (\n            <div className=\"col-md-4\">\n                <form onSubmit={this.handleSubmit} className=\"text-left\">\n                    <h2 className=\"page-header\">{this.state.action} Contact Group</h2>\n                    {msgs}\n                    <Input label=\"Name\" type=\"text\" ref=\"name\"\n                           placeholder=\"Admins\" value={this.state.name}\n                           autoFocus hasFeedback bsStyle={this.validateNameState()}\n                           onChange={this.handleChange} />\n                    <Button type=\"submit\" bsStyle=\"success\">\n                        {this.state.action} Contact Group\n                    </Button>\n                    <Link to=\"s_contacts_list\" className=\"btn btn-default\">Cancel</Link>\n                </form>\n            </div>\n        );\n    }\n});\n","var Router = ReactRouter,\n    Route = Router.Route,\n    Link = Router.Link,\n    RouteHandler = Router.RouteHandler,\n    DefaultRoute = Router.DefaultRoute,\n    Redirect = Router.Redirect,\n    NotFoundRoute = Router.NotFoundRoute,\n\n    // bootstrap\n    Input = ReactBootstrap.Input,\n    Button = ReactBootstrap.Button,\n    Table = ReactBootstrap.Table;\n\nvar App = React.createClass({\n    getInitialState: function() {\n        return {\n            loggedIn: auth.loggedIn(),\n            messages: []\n        };\n    },\n    setStateOnAuth: function(loggedIn, messages) {\n        this.setState({loggedIn: loggedIn, messages: messages});\n    },\n    componentWillMount: function() {\n        auth.onChange = this.setStateOnAuth;\n        auth.login();\n    },\n    render: function() {\n        var Navbar = ReactBootstrap.Navbar,\n            Nav = ReactBootstrap.Nav,\n            NavItem = ReactBootstrap.NavItem;\n        if (this.state.loggedIn) {\n            accessLink = <NavItem href=\"#/logout\">Sign Out</NavItem>;\n        } else {\n            accessLink = <NavItem href=\"#/login\">Sign In</NavItem>;\n        }\n        return (\n            <div>\n                <Navbar brand=\"ZenPager\" fixedTop fluid inverse>\n                    <Nav right>\n                        <NavItem href=\"#/dashboard\">Dashboard</NavItem>\n                        <NavItem href=\"#/settings\">Settings</NavItem>\n                        <NavItem href=\"#/profile\">Profile</NavItem>\n                        {accessLink}\n                    </Nav>\n                </Navbar>\n                <RouteHandler messages={this.state.messages} />\n            </div>\n        );\n    }\n});\n\nvar Messages = React.createClass({\n    getInitialState: function() {\n        return {\n            visible: true\n        };\n    },\n    handleDismiss: function() {\n        this.setState({visible: false});\n    },\n    render: function() {\n        if (this.state.visible) {\n            var Alert = ReactBootstrap.Alert;\n            return (\n                <Alert bsStyle={this.props.type}\n                       onDismiss={this.handleDismiss}>\n                    {this.props.message}\n                </Alert>\n            );\n        }\n        return <div></div>;\n    }\n});\n\nvar NotFound = React.createClass({\n    render: function() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10\n                                    col-md-offset-2 main\">\n                        <h1>404 Not Found</h1>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar routes = (\n    <Route name=\"app\" path=\"/\" handler={App}>\n        <NotFoundRoute handler={NotFound} />\n        <Route name=\"login\" handler={Login} />\n        <Route name=\"logout\" handler={Logout} />\n        <Route name=\"dashboard\" handler={DashboardHolder}>\n            <Route name=\"d_overview\" path=\"overview\"\n                   handler={DashboardOverview} />\n            <Route name=\"d_servers\" path=\"servers\"\n                   handler={DashboardServers} />\n            <Route name=\"d_apps\" path=\"apps\" handler={DashboardApps} />\n            <Redirect from=\"/dashboard\" to=\"d_overview\" />\n        </Route>\n        <Route name=\"settings\" handler={SettingsHolder}>\n            <Route name=\"s_commands\" path=\"commands\"\n                   handler={SettingsCommands} />\n            <Route name=\"contacts\" handler={SettingsContactsHolder}>\n                <Route name=\"s_contacts_list\" path=\"list\"\n                       handler={SettingsContacts} />\n                <Route name=\"s_contacts_add\" path=\"add\"\n                       handler={SettingsContactsForm} />\n                <Route name=\"s_contacts_update\" path=\"update/:contactId\"\n                       handler={SettingsContactsForm} />\n                <Route name=\"s_contacts_group_add\" path=\"group/add\"\n                       handler={SettingsContactsGroupForm} />\n                <Route name=\"s_contacts_group_update\" path=\"group/update/:groupId\"\n                       handler={SettingsContactsGroupForm} />\n                <Redirect from=\"/contacts\" to=\"s_contacts_list\" />\n            </Route>\n            <Route name=\"s_servers\" path=\"servers\" handler={SettingsServers} />\n            <Route name=\"s_timeperiods\" path=\"timeperiods\"\n                   handler={SettingsTimePeriods} />\n            <Redirect from=\"/settings\" to=\"s_commands\" />\n        </Route>\n        <Route name=\"profile\" handler={ProfileHolder}>\n            <Route name=\"p_password\" path=\"password\"\n                   handler={ProfilePassword} />\n            <Redirect from=\"/profile\" to=\"p_password\" />\n        </Route>\n        <Redirect from=\"/\" to=\"d_overview\" />\n    </Route>\n);\n\nRouter.run(routes, function(Handler) {\n    React.render(<Handler />, document.body);\n});\n"],"sourceRoot":"/source/"}