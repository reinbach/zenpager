{"version":3,"sources":["utils.jsx","auth.jsx","validation.jsx","dashboard.jsx","profile.jsx","settings.jsx","settings_contacts.jsx","main.jsx"],"names":["removeFromList","l","o","n","i","length","push","authenticate","email","password","cb","r","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","data","JSON","parse","responseText","Result","authenticated","token","getResponseHeader","id","errors","Messages","send","stringify","logout","console","log","passwordValid","validateEmail","re","test","request","call","method","url","auth","getToken","status","remove","this","get","post","patch","AuthenticationMixin","statics","willTransitionTo","transition","nextPath","path","loggedIn","redirect","Login","React","createClass","displayName","contextTypes","router","PropTypes","func","isRequired","getInitialState","getDefaultProps","messages","validationEmailState","state","validationPasswordState","handleChange","setState","refs","getValue","handleSubmit","event","preventDefault","$__0","context","getCurrentQuery","login","replaceWith","bind","render","msgs","props","forEach","msg","createElement","type","Type","message","Content","className","onSubmit","Input","label","ref","placeholder","value","autoFocus","hasFeedback","bsStyle","onChange","Button","Logout","componentDidMount","arguments","localStorage","undefined","res","DashboardHolder","mixins","Link","to","RouteHandler","DashboardOverview","DashboardServers","DashboardApps","ProfileHolder","ProfilePassword","password_confirm","validationPasswordConfirmState","user","updatePassword","success","callback","processPatch","SettingsHolder","SettingsCommands","SettingsServers","SettingsTimePeriods","contacts","init","$","addClass","close","removeClass","processGet","Data","getAll","processGetAll","add","name","processAdd","processRemove","SettingsContactsMixin","componentWillUnmount","SettingsContactsHolder","SettingsContactsLine","handleDelete","removeContact","contact","bsSize","onClick","params","contactId","SettingsContacts","propTypes","array","componentWillMount","Table","striped","hover","SettingsContactsForm","action","handleGet","validateNameState","validateEmailState","update","handleFormResponse","Router","ReactRouter","Route","DefaultRoute","Redirect","NotFoundRoute","ReactBootstrap","App","setStateOnAuth","Navbar","Nav","NavItem","accessLink","href","brand","fixedTop","fluid","inverse","right","visible","handleDismiss","Alert","onDismiss","NotFound","routes","handler","from","run","Handler","document","body"],"mappings":"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","file":"dashboard.min.js","sourcesContent":["var request = {\n    call : function(method, url, cb) {\n        var r = new XMLHttpRequest();\n        r.open(method, url, true);\n        r.setRequestHeader(\"Content-Type\", \"application/json\");\n        r.setRequestHeader(\"X-Access-Token\", auth.getToken());\n        r.onreadystatechange = function() {\n            if (r.readyState === 4) {\n                if (r.status == 401) {\n                    auth.logout();\n                } else {\n                    data = JSON.parse(r.responseText);\n                    if (cb) {\n                        cb(data);\n                    }\n                }\n            }\n        };\n        return r\n    },\n    remove: function(url, cb) {\n        var r = this.call(\"DELETE\", url, cb);\n        r.send();\n    },\n    get: function(url, cb) {\n        var r = this.call(\"GET\", url, cb);\n        r.send();\n    },\n    post: function(url, data, cb) {\n        var r = this.call(\"POST\", url, cb);\n        r.send(JSON.stringify(data));\n    },\n    patch: function(url, data, cb) {\n        var r = this.call(\"PATH\", data, cb);\n        r.send(JSON.stringify(data));\n    }\n}\n\nfunction removeFromList(l, o) {\n    var n = [];\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] != o) {\n            n.push(l[i]);\n        }\n    }\n    return n;\n}\n","var AuthenticationMixin = {\n    statics: {\n        willTransitionTo: function(transition) {\n            var nextPath = transition.path;\n            if (!auth.loggedIn()) {\n                transition.redirect(\"/login\", {}, {\"nextPath\": nextPath});\n            }\n        }\n    }\n};\n\nvar Login = React.createClass({\n    contextTypes: {\n        router: React.PropTypes.func.isRequired\n    },\n    getInitialState: function() {\n        return {\n            email: '',\n            password: ''\n        };\n    },\n    getDefaultProps: function() {\n        return {\n            messages: []\n        }\n    },\n    validationEmailState: function() {\n        if (this.state.email.length > 0) {\n            if (validateEmail(this.state.email) === true) {\n                return \"success\";\n            }\n            return \"error\"\n        }\n    },\n    validationPasswordState: function() {\n        if (this.state.password.length > 0) {\n            if (passwordValid(this.state.password)) {\n                return \"success\";\n            }\n            return \"error\";\n        }\n    },\n    handleChange: function() {\n        this.setState({\n            email: this.refs.email.getValue(),\n            password: this.refs.password.getValue()\n        });\n    },\n    handleSubmit: function(event) {\n        event.preventDefault();\n        var { router } = this.context;\n        var nextPath = router.getCurrentQuery().nextPath;\n        // Prevent form being submitted till elements are in valid state\n        auth.login(this.state.email, this.state.password, function(loggedIn) {\n            if (nextPath) {\n                router.replaceWith(nextPath);\n            } else {\n                router.replaceWith(\"/\");\n            }\n        }.bind(this));\n    },\n    render: function() {\n        var msgs = [];\n        this.props.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-3 col-md-offset-5 main\">\n                        {msgs}\n                        <h1 className=\"page-header\">Sign In</h1>\n                        <form onSubmit={this.handleSubmit} className=\"text-left\">\n                            <Input label=\"Email Address\" type=\"email\" ref=\"email\"\n                                   placeholder=\"Enter email\" value={this.state.email}\n                                   autoFocus hasFeedback bsStyle={this.validationEmailState()}\n                                   onChange={this.handleChange} />\n                            <Input label=\"Password\" type=\"password\" ref=\"password\"\n                                   placeholder=\"Password\" value={this.state.password}\n                                   hasFeedback bsStyle={this.validationPasswordState()}\n                                   onChange={this.handleChange} />\n                            <Button type=\"submit\" bsStyle=\"success\">\n                                Sign In\n                            </Button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar Logout = React.createClass({\n    componentDidMount: function() {\n        auth.logout();\n    },\n    render: function() {\n        return (\n            <div className=\"col-md-3 col-md-offset-3\">\n                <h1>Signed Out</h1>\n                <p>You are now signed out!</p>\n            </div>\n        );\n    }\n});\n\nvar auth = {\n    login: function(email, password, cb) {\n        cb = arguments[arguments.length - 1];\n        if (localStorage.token) {\n            if (cb) cb(true);\n            this.onChange(true);\n            return ;\n        }\n        if (email === undefined || password == undefined) {\n            if (cb) cb(false);\n            return ;\n        }\n        authenticate(email, password, function(res) {\n            if (res.authenticated) {\n                localStorage.token = res.token;\n                localStorage.id = res.id;\n                if (cb) cb(true);\n                this.onChange(true, res.errors);\n            } else {\n                if (cb) cb(false);\n                this.onChange(false, res.errors);\n            }\n        }.bind(this));\n    },\n    getToken: function() {\n        return localStorage.token;\n    },\n    logout: function(cb) {\n        logout(localStorage.token);\n        delete localStorage.token;\n        if (cb) cb(false);\n        this.onChange(false);\n    },\n    loggedIn: function() {\n        return !!localStorage.token;\n    },\n    onChange: function() {}\n};\n\nfunction authenticate(email, password, cb) {\n    var r = new XMLHttpRequest();\n    r.open(\"POST\", \"/api/v1/auth/login\", true);\n    r.setRequestHeader(\"Content-Type\", \"application/json\");\n    r.onreadystatechange = function() {\n        if (r.readyState === 4) {\n            data = JSON.parse(r.responseText);\n            if (data.Result === \"success\") {\n                cb({\n                    authenticated: true,\n                    token: r.getResponseHeader(\"X-Access-Token\"),\n                    id: data.data\n                });\n            } else {\n                cb({\n                    authenticated: false,\n                    errors: data.Messages\n                });\n            }\n        }\n    };\n    r.send(JSON.stringify({email: email, password: password}));\n}\n\nfunction logout(token) {\n    var r = new XMLHttpRequest();\n    r.open(\"GET\", \"/api/v1/auth/logout\", true);\n    r.setRequestHeader(\"Content-Type\", \"application/json\");\n    r.setRequestHeader(\"X-Access-Token\", token);\n    r.onreadystatechange = function() {\n        if (r.readyState === 4) {\n            data = JSON.parse(r.responseText);\n            if (data.Result === \"success\") {\n                console.log(\"successfully logged out\");\n            } else {\n                console.log(\"failed to logout!\");\n            }\n        }\n    };\n    r.send();\n}\n","function passwordValid(password) {\n    if (password.length >= 8) {\n        return true;\n    }\n    return false;\n}\n\nfunction validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n","var DashboardHolder = React.createClass({\n    mixins: [AuthenticationMixin],\n    getInitialState: function() {\n        return {\n            messages: []\n        };\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type=\"error\" message={msg} />);\n        });\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 col-md-2 sidebar\">\n                        <ul className=\"nav nav-sidebar\">\n                            <li><Link to=\"d_overview\">Overview</Link></li>\n                            <li><Link to=\"d_servers\">Servers</Link></li>\n                            <li><Link to=\"d_apps\">Applications</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10\n                                    col-md-offset-2 main\">\n                        {msgs}\n                        <RouteHandler />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar DashboardOverview = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Dashboard Overview...\n            </div>\n        );\n    }\n});\n\nvar DashboardServers = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Dashboard Servers...\n            </div>\n        );\n    }\n});\n\nvar DashboardApps = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Dashboard Apps...\n            </div>\n        );\n    }\n});\n","var ProfileHolder = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 col-md-2 sidebar\">\n                        <h1>Profile</h1>\n                        <ul className=\"nav nav-sidebar\">\n                            <li><Link to=\"p_password\">Password</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n                        <RouteHandler />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar ProfilePassword = React.createClass({\n    mixins: [AuthenticationMixin],\n    getInitialState: function() {\n        return {\n            password: '',\n            password_confirm: '',\n            messages: []\n        };\n    },\n    validationPasswordState: function() {\n        if (this.state.password.length > 0) {\n            if (passwordValid(this.state.password)) {\n                return \"success\";\n            }\n            return \"error\";\n        }\n    },\n    validationPasswordConfirmState: function() {\n        if (this.state.password_confirm.length > 0 || this.state.password.length > 0) {\n            if (this.state.password_confirm === this.state.password) {\n                return \"success\";\n            }\n            return \"error\";\n        }\n    },\n    handleChange: function() {\n        this.setState({\n            password: this.refs.password.getValue(),\n            password_confirm: this.refs.password_confirm.getValue()\n        });\n    },\n    handleSubmit: function(event) {\n        event.preventDefault();\n        if (this.state.password.length < 1) {\n            this.setState({\"messages\": [{Type: \"danger\", Content: \"Password is required.\"}]});\n            return ;\n        }\n        if (this.validationPasswordState() !== \"success\" || this.validationPasswordConfirmState() !== \"success\") {\n            this.setState({\"messages\": [{Type: \"danger\", Content: \"Fix errors\"}]});\n            return ;\n        }\n        user.updatePassword(this.state.password, function(success, messages) {\n            if (success === true) {\n                this.setState({messages: messages, password: \"\", password_confirm: \"\"});\n            } else {\n                this.setState({\n                    messages: messages,\n                    password: this.state.password,\n                    password_confirm: this.state.password_confirm\n                });\n                console.log(this.state.messages);\n            }\n        }.bind(this));\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        return (\n            <div className=\"col-md-3\">\n                <form onSubmit={this.handleSubmit} className=\"text-left\">\n                    <h1 className=\"page-header\">Reset Password</h1>\n                    {msgs}\n                    <Input label=\"New Password\" type=\"password\" ref=\"password\"\n                           placeholder=\"New password\" value={this.state.password}\n                           autoFocus hasFeedback bsStyle={this.validationPasswordState()}\n                           onChange={this.handleChange} />\n                    <Input label=\"Confirm Password\" type=\"password\" ref=\"password_confirm\"\n                           placeholder=\"Confirm Password\" value={this.state.password_confirm}\n                           hasFeedback bsStyle={this.validationPasswordConfirmState()}\n                           onChange={this.handleChange} />\n                    <Button type=\"submit\" bsStyle=\"success\">\n                        Update Password\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n});\n\nvar user = {\n    updatePassword: function(password, cb) {\n        callback = cb;\n        if (!localStorage.id) {\n            if (callback) callback(false);\n            return ;\n        }\n        if (password.length < 1) {\n            if (callback) callback(false, [\"Password is required.\"]);\n            return ;\n        }\n        request.patch(\n            \"/api/v1/user/\" + localStorage.id,\n            {password: password},\n            this.processPatch\n        )\n    },\n    processPatch: function(res) {\n        if (res.Result == \"success\") {\n            if (callback) callback(true, [{\n                Type: \"success\",\n                Content: \"Successfully updated password.\"\n            }]);\n        } else {\n            if (callback) callback(false, res.errors);\n        }\n    }\n};\n","var SettingsHolder = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 col-md-2 sidebar\">\n                        <h1>Settings</h1>\n                        <ul className=\"nav nav-sidebar\">\n                            <li><Link to=\"s_commands\">Commands</Link></li>\n                            <li><Link to=\"s_contacts_list\" className=\"contacts-link\">Contacts</Link></li>\n                            <li><Link to=\"s_servers\">Servers</Link></li>\n                            <li>\n                                <Link to=\"s_timeperiods\">Time Periods</Link>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10\n                                    col-md-offset-2 main\">\n                        {/*<Messages type=\"success\" message=\"Hello World\" />*/}\n                        <RouteHandler />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar SettingsCommands = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Settings Commands...\n            </div>\n        );\n    }\n});\n\nvar SettingsServers = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Settings Servers...\n            </div>\n        );\n    }\n});\n\nvar SettingsTimePeriods = React.createClass({\n    mixins: [AuthenticationMixin],\n    render: function() {\n        return (\n            <div>\n                Settings Time Periods...\n            </div>\n        );\n    }\n});\n","var contacts = {\n    init: function() {\n        $(\".contacts-link\").addClass(\"active\");\n    },\n    close: function() {\n        $(\".contacts-link\").removeClass(\"active\");\n    },\n    get: function(id, cb) {\n        callback = cb;\n        request.get(\"/api/v1/contacts/\" + id, this.processGet);\n    },\n    processGet: function(cb) {\n        if (data.Result === \"success\") {\n            callback(data.Data, []);\n        } else {\n            callback([], data.Messages);\n        }\n    },\n    getAll: function(cb) {\n        callback = cb;\n        request.get(\"/api/v1/contacts/\", this.processGetAll);\n    },\n    processGetAll: function(data) {\n        if (data.Result === \"success\") {\n            callback(data.Data, []);\n        } else {\n            callback({data: [], errors: data.Messages});\n        }\n    },\n    add: function(name, email, cb) {\n        callback = cb;\n        request.post(\n            \"/api/v1/contacts/\",\n            {name: name, email: email},\n            this.processAdd\n        );\n    },\n    processAdd: function(res) {\n        if (res.Result == \"success\") {\n            if (callback) callback(true, [{\n                Type: \"success\",\n                Content: \"Successfully added contact.\"\n            }]);\n        } else {\n            if (callback) callback(false, res.Messages);\n        }\n    },\n    remove: function(id, cb) {\n        callback = cb\n        request.remove(\n            \"/api/v1/contacts/\" + id,\n            this.processRemove\n        );\n    },\n    processRemove: function(res) {\n        if (res.Result == \"success\") {\n            if (callback) callback([{\n                Type: \"success\",\n                Content: \"Successfully removed contact.\"\n            }]);\n        } else {\n            if (callback) callback(res.Messages);\n        }\n    }\n}\n\nvar SettingsContactsMixin = {\n    componentDidMount: function() {\n        contacts.init();\n    },\n    componentWillUnmount: function() {\n        contacts.close();\n    }\n};\n\nvar SettingsContactsHolder = React.createClass({\n    mixins: [AuthenticationMixin, SettingsContactsMixin],\n    render: function() {\n        return (\n            <div>\n                <h1 className=\"page-header\">Contacts</h1>\n                <RouteHandler />\n            </div>\n        );\n    }\n});\n\nvar SettingsContactsLine = React.createClass({\n    handleDelete: function() {\n        this.props.removeContact(this.props.contact);\n    },\n    render: function() {\n        return (\n            <tr>\n                <td>{this.props.contact.name}</td>\n                <td>{this.props.contact.user.email}</td>\n                <td>\n                    <Button bsSize=\"xsmall\" bsStyle=\"danger\"\n                            onClick={this.handleDelete}>\n                        Delete\n                    </Button>\n                    <Link to=\"s_contacts_update\"\n                          params={{\"contactId\": this.props.contact.id}}\n                          className=\"btn btn-xs btn-default\">Edit</Link>\n                </td>\n            </tr>\n        );\n    }\n});\n\nvar SettingsContacts = React.createClass({\n    mixins: [AuthenticationMixin, SettingsContactsMixin],\n    propTypes: {\n        contacts: React.PropTypes.array,\n        messages: React.PropTypes.array\n    },\n    getInitialState: function() {\n        return {\n            contacts: [],\n            messages: []\n        };\n    },\n    componentWillMount: function() {\n        contacts.getAll(function(data, messages) {\n            this.setState({\n                contacts: data,\n                messages: messages\n            });\n        }.bind(this));\n    },\n    removeContact: function(contact) {\n        contacts.remove(contact.id, function(messages) {\n            this.setState({messages: messages})\n        }.bind(this));\n        this.setState({\n            contacts: removeFromList(this.state.contacts, contact)\n        });\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        var contacts = [];\n        this.state.contacts.forEach(function(contact) {\n            contacts.push(<SettingsContactsLine contact={contact} removeContact={this.removeContact} />);\n        }.bind(this));\n        return (\n            <div>\n                {msgs}\n                <Table striped hover>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {contacts}\n                    </tbody>\n                </Table>\n\n                <Link to=\"s_contacts_add\" className=\"btn btn-primary\">Add Contact</Link>\n            </div>\n        );\n    }\n});\n\nvar SettingsContactsForm = React.createClass({\n    mixins: [AuthenticationMixin, SettingsContactsMixin],\n    getInitialState: function() {\n        return {\n            id: \"\",\n            action: \"Add\",\n            name: \"\",\n            email: \"\",\n            messages: []\n        }\n    },\n    componentDidMount: function() {\n        if (this.props.params != undefined) {\n            var id = this.props.params.contactId;\n            this.setState({\n                \"id\": id,\n                \"action\": \"Update\"\n            });\n            contacts.get(id, this.handleGet);\n        }\n    },\n    handleGet: function(data, messages) {\n        if (messages.length > 0) {\n            this.setState({messages: messages, name: \"\", email: \"\"});\n        } else {\n            this.setState({\n                messages: messages,\n                name: data.name,\n                email: data.user.email\n            });\n        }\n    },\n    validateNameState: function() {\n        if (this.state.name.length > 0) {\n            if (this.state.name.length > 2) {\n                return \"success\";\n            }\n            return \"error\"\n        }\n    },\n    validateEmailState: function() {\n        if (this.state.email.length > 0) {\n            if (validateEmail(this.state.email) === true) {\n                return \"success\";\n            }\n            return \"error\"\n        }\n    },\n    handleChange: function() {\n        this.setState({\n            name: this.refs.name.getValue(),\n            email: this.refs.email.getValue()\n        });\n    },\n    handleSubmit: function() {\n        event.preventDefault();\n        if (this.state.name.length < 1) {\n            this.setState({\n                messages: [{Type: \"danger\", Content: \"Name is required.\"}]\n            });\n            return ;\n        }\n        if (this.state.email.length < 1) {\n            this.setState({\n                messages: [{Type: \"danger\", Content: \"Email is required.\"}]\n            });\n            return ;\n        }\n        if (this.validateNameState() !== \"success\" || this.validateEmailState() !== \"success\") {\n            this.setState({\n                messages: [{Type: \"danger\", Content: \"Fix errors\"}]\n            });\n            return ;\n        }\n\n        if (this.state.id != \"\") {\n            contacts.update(this.state.name, this.state.email,\n                            this.handleFormResponse);\n        } else {\n            contacts.add(this.state.name, this.state.email,\n                         this.handleFormResponse);\n        }\n    },\n    handleFormResponse: function(success, message) {\n        if (success == true) {\n            this.setState({messages: messages, name: \"\", email: \"\"});\n        } else {\n            this.setState({\n                messages: messages,\n                name: this.state.name,\n                email: this.state.email\n            });\n        }\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        return (\n            <div className=\"col-md-4\">\n                <form onSubmit={this.handleSubmit} className=\"text-left\">\n                    <h2 className=\"page-header\">{this.state.action} Contact</h2>\n                    {msgs}\n                    <Input label=\"Name\" type=\"text\" ref=\"name\"\n                           placeholder=\"Jane Smart\" value={this.state.name}\n                           autoFocus hasFeedback bsStyle={this.validateNameState()}\n                           onChange={this.handleChange} />\n                    <Input label=\"Email\" type=\"text\" ref=\"email\"\n                           placeholder=\"test@example.com\" value={this.state.email}\n                           hasFeedback bsStyle={this.validateEmailState()}\n                           onChange={this.handleChange} />\n                    <Button type=\"submit\" bsStyle=\"success\">\n                        {this.state.action} Contact\n                    </Button>\n                    <Link to=\"s_contacts_list\" className=\"btn btn-default\">Cancel</Link>\n                </form>\n            </div>\n        );\n    }\n});\n","var Router = ReactRouter,\n    Route = Router.Route,\n    Link = Router.Link,\n    RouteHandler = Router.RouteHandler,\n    DefaultRoute = Router.DefaultRoute,\n    Redirect = Router.Redirect,\n    NotFoundRoute = Router.NotFoundRoute,\n\n    // bootstrap\n    Input = ReactBootstrap.Input,\n    Button = ReactBootstrap.Button,\n    Table = ReactBootstrap.Table;\n\nvar App = React.createClass({\n    getInitialState: function() {\n        return {\n            loggedIn: auth.loggedIn(),\n            messages: []\n        };\n    },\n    setStateOnAuth: function(loggedIn, messages) {\n        this.setState({loggedIn: loggedIn, messages: messages});\n    },\n    componentWillMount: function() {\n        auth.onChange = this.setStateOnAuth;\n        auth.login();\n    },\n    render: function() {\n        var Navbar = ReactBootstrap.Navbar,\n            Nav = ReactBootstrap.Nav,\n            NavItem = ReactBootstrap.NavItem;\n        if (this.state.loggedIn) {\n            accessLink = <NavItem href=\"#/logout\">Sign Out</NavItem>;\n        } else {\n            accessLink = <NavItem href=\"#/login\">Sign In</NavItem>;\n        }\n        return (\n            <div>\n                <Navbar brand=\"ZenPager\" fixedTop fluid inverse>\n                    <Nav right>\n                        <NavItem href=\"#/dashboard\">Dashboard</NavItem>\n                        <NavItem href=\"#/settings\">Settings</NavItem>\n                        <NavItem href=\"#/profile\">Profile</NavItem>\n                        {accessLink}\n                    </Nav>\n                </Navbar>\n                <RouteHandler messages={this.state.messages} />\n            </div>\n        );\n    }\n});\n\nvar Messages = React.createClass({\n    getInitialState: function() {\n        return {\n            visible: true\n        };\n    },\n    handleDismiss: function() {\n        this.setState({visible: false});\n    },\n    render: function() {\n        if (this.state.visible) {\n            var Alert = ReactBootstrap.Alert;\n            return (\n                <Alert bsStyle={this.props.type}\n                       onDismiss={this.handleDismiss}>\n                    {this.props.message}\n                </Alert>\n            );\n        }\n        return <div></div>;\n    }\n});\n\nvar NotFound = React.createClass({\n    render: function() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10\n                                    col-md-offset-2 main\">\n                        <h1>404 Not Found</h1>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar routes = (\n    <Route name=\"app\" path=\"/\" handler={App}>\n        <NotFoundRoute handler={NotFound} />\n        <Route name=\"login\" handler={Login} />\n        <Route name=\"logout\" handler={Logout} />\n        <Route name=\"dashboard\" handler={DashboardHolder}>\n            <Route name=\"d_overview\" path=\"overview\"\n                   handler={DashboardOverview} />\n            <Route name=\"d_servers\" path=\"servers\"\n                   handler={DashboardServers} />\n            <Route name=\"d_apps\" path=\"apps\" handler={DashboardApps} />\n            <Redirect from=\"/dashboard\" to=\"d_overview\" />\n        </Route>\n        <Route name=\"settings\" handler={SettingsHolder}>\n            <Route name=\"s_commands\" path=\"commands\"\n                   handler={SettingsCommands} />\n            <Route name=\"contacts\" handler={SettingsContactsHolder}>\n                <Route name=\"s_contacts_list\" path=\"list\"\n                       handler={SettingsContacts} />\n                <Route name=\"s_contacts_add\" path=\"add\"\n                       handler={SettingsContactsForm} />\n                <Route name=\"s_contacts_update\" path=\"update/:contactId\"\n                       handler={SettingsContactsForm} />\n                <Redirect from=\"/contacts\" to=\"s_contacts_list\" />\n            </Route>\n            <Route name=\"s_servers\" path=\"servers\" handler={SettingsServers} />\n            <Route name=\"s_timeperiods\" path=\"timeperiods\"\n                   handler={SettingsTimePeriods} />\n            <Redirect from=\"/settings\" to=\"s_commands\" />\n        </Route>\n        <Route name=\"profile\" handler={ProfileHolder}>\n            <Route name=\"p_password\" path=\"password\"\n                   handler={ProfilePassword} />\n            <Redirect from=\"/profile\" to=\"p_password\" />\n        </Route>\n        <Redirect from=\"/\" to=\"d_overview\" />\n    </Route>\n);\n\nRouter.run(routes, function(Handler) {\n    React.render(<Handler />, document.body);\n});\n"],"sourceRoot":"/source/"}