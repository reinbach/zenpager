{"version":3,"sources":["_auth.jsx","_profile.jsx","_validation.jsx","_dashboard.jsx","_settings.jsx","_settings_contacts.jsx","main.jsx"],"names":["authenticate","email","password","cb","r","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","data","JSON","parse","responseText","Result","authenticated","token","getResponseHeader","id","ID","errors","Messages","send","stringify","logout","console","log","validateEmail","re","test","updatePassword","userId","update","passwordValid","length","Authentication","statics","willTransitionTo","transition","nextPath","path","auth","loggedIn","redirect","Login","React","createClass","displayName","contextTypes","router","PropTypes","func","isRequired","getInitialState","getDefaultProps","messages","validationEmailState","this","state","validationPasswordState","handleChange","setState","refs","getValue","handleSubmit","event","preventDefault","$__0","context","getCurrentQuery","login","replaceWith","bind","render","msgs","props","forEach","msg","push","createElement","type","Type","message","Content","className","onSubmit","Input","label","ref","placeholder","value","autoFocus","hasFeedback","bsStyle","onChange","Button","Logout","componentDidMount","arguments","localStorage","undefined","res","getToken","DashboardHolder","mixins","Link","to","RouteHandler","DashboardOverview","DashboardServers","DashboardApps","ProfileHolder","ProfilePassword","password_confirm","validationPasswordConfirmState","user","success","SettingsHolder","SettingsCommands","SettingsServers","SettingsTimePeriods","contacts","get","SettingsContacts","propTypes","array","SettingsContactsAdd","Router","ReactRouter","Route","DefaultRoute","Redirect","NotFoundRoute","ReactBootstrap","App","setStateOnAuth","componentWillMount","Navbar","Nav","NavItem","accessLink","href","brand","fixedTop","fluid","inverse","right","visible","handleDismiss","Alert","onDismiss","NotFound","routes","name","handler","from","run","Handler","document","body"],"mappings":"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","file":"dashboard.min.js","sourcesContent":["var Authentication = {\n    statics: {\n        willTransitionTo: function(transition) {\n            var nextPath = transition.path;\n            if (!auth.loggedIn()) {\n                transition.redirect(\"/login\", {}, {\"nextPath\": nextPath});\n            }\n        }\n    }\n};\n\nvar Login = React.createClass({\n    contextTypes: {\n        router: React.PropTypes.func.isRequired\n    },\n    getInitialState: function() {\n        return {\n            email: '',\n            password: ''\n        };\n    },\n    getDefaultProps: function() {\n        return {\n            messages: []\n        }\n    },\n    validationEmailState: function() {\n        if (this.state.email.length > 0) {\n            if (validateEmail(this.state.email) === true) {\n                return \"success\";\n            }\n            return \"error\"\n        }\n    },\n    validationPasswordState: function() {\n        if (this.state.password.length > 0) {\n            if (passwordValid(this.state.password)) {\n                return \"success\";\n            }\n            return \"error\";\n        }\n    },\n    handleChange: function() {\n        this.setState({\n            email: this.refs.email.getValue(),\n            password: this.refs.password.getValue()\n        });\n    },\n    handleSubmit: function(event) {\n        event.preventDefault();\n        var { router } = this.context;\n        var nextPath = router.getCurrentQuery().nextPath;\n        // Prevent form being submitted till elements are in valid state\n        auth.login(this.state.email, this.state.password, function(loggedIn) {\n            if (nextPath) {\n                router.replaceWith(nextPath);\n            } else {\n                router.replaceWith(\"/\");\n            }\n        }.bind(this));\n    },\n    render: function() {\n        var msgs = [];\n        this.props.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-3 col-md-offset-5 main\">\n                        {msgs}\n                        <h1 className=\"page-header\">Sign In</h1>\n                        <form onSubmit={this.handleSubmit} className=\"text-left\">\n                            <Input label=\"Email Address\" type=\"email\" ref=\"email\"\n                                   placeholder=\"Enter email\" value={this.state.email}\n                                   autoFocus hasFeedback bsStyle={this.validationEmailState()}\n                                   onChange={this.handleChange} />\n                            <Input label=\"Password\" type=\"password\" ref=\"password\"\n                                   placeholder=\"Password\" value={this.state.password}\n                                   hasFeedback bsStyle={this.validationPasswordState()}\n                                   onChange={this.handleChange} />\n                            <Button type=\"submit\" bsStyle=\"success\">\n                                Sign In\n                            </Button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar Logout = React.createClass({\n    componentDidMount: function() {\n        auth.logout();\n    },\n    render: function() {\n        return (\n            <div className=\"col-md-3 col-md-offset-3\">\n                <h1>Signed Out</h1>\n                <p>You are now signed out!</p>\n            </div>\n        );\n    }\n});\n\nvar auth = {\n    login: function(email, password, cb) {\n        cb = arguments[arguments.length - 1];\n        if (localStorage.token) {\n            if (cb) cb(true);\n            this.onChange(true);\n            return ;\n        }\n        if (email === undefined || password == undefined) {\n            if (cb) cb(false);\n            return ;\n        }\n        authenticate(email, password, function(res) {\n            if (res.authenticated) {\n                localStorage.token = res.token;\n                localStorage.id = res.id;\n                if (cb) cb(true);\n                this.onChange(true, res.errors);\n            } else {\n                if (cb) cb(false);\n                this.onChange(false, res.errors);\n            }\n        }.bind(this));\n    },\n    getToken: function() {\n        return localStorage.token;\n    },\n    logout: function(cb) {\n        logout(localStorage.token);\n        delete localStorage.token;\n        if (cb) cb(false);\n        this.onChange(false);\n    },\n    loggedIn: function() {\n        return !!localStorage.token;\n    },\n    onChange: function() {}\n};\n\nfunction authenticate(email, password, cb) {\n    var r = new XMLHttpRequest();\n    r.open(\"POST\", \"/api/v1/auth/login\", true);\n    r.setRequestHeader(\"Content-Type\", \"application/json\");\n    r.onreadystatechange = function() {\n        if (r.readyState === 4) {\n            data = JSON.parse(r.responseText);\n            if (data.Result === \"success\") {\n                cb({\n                    authenticated: true,\n                    token: r.getResponseHeader(\"X-Access-Token\"),\n                    id: data.ID\n                });\n            } else {\n                cb({\n                    authenticated: false,\n                    errors: data.Messages\n                });\n            }\n        }\n    };\n    r.send(JSON.stringify({email: email, password: password}));\n}\n\nfunction logout(token) {\n    var r = new XMLHttpRequest();\n    r.open(\"GET\", \"/api/v1/auth/logout\", true);\n    r.setRequestHeader(\"Content-Type\", \"application/json\");\n    r.setRequestHeader(\"X-Access-Token\", token);\n    r.onreadystatechange = function() {\n        if (r.readyState === 4) {\n            data = JSON.parse(r.responseText);\n            if (data.Result === \"success\") {\n                console.log(\"successfully logged out\");\n            } else {\n                console.log(\"faield to logout!\");\n            }\n        }\n    };\n    r.send();\n}\n\nfunction validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n","var ProfileHolder = React.createClass({\n    mixins: [Authentication],\n    render: function() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 col-md-2 sidebar\">\n                        <h1>Profile</h1>\n                        <ul className=\"nav nav-sidebar\">\n                            <li><Link to=\"p_password\">Password</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n                        <RouteHandler />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar ProfilePassword = React.createClass({\n    getInitialState: function() {\n        return {\n            password: '',\n            password_confirm: '',\n            messages: []\n        };\n    },\n    validationPasswordState: function() {\n        if (this.state.password.length > 0) {\n            if (passwordValid(this.state.password)) {\n                return \"success\";\n            }\n            return \"error\";\n        }\n    },\n    validationPasswordConfirmState: function() {\n        if (this.state.password_confirm.length > 0 || this.state.password.length > 0) {\n            if (this.state.password_confirm === this.state.password) {\n                return \"success\";\n            }\n            return \"error\";\n        }\n    },\n    handleChange: function() {\n        this.setState({\n            password: this.refs.password.getValue(),\n            password_confirm: this.refs.password_confirm.getValue()\n        });\n    },\n    handleSubmit: function(event) {\n        event.preventDefault();\n        if (this.state.password.length < 1) {\n            this.setState({\"messages\": [{Type: \"danger\", Content: \"Password is required.\"}]});\n            return ;\n        }\n        if (this.validationPasswordState() !== \"success\" || this.validationPasswordConfirmState() !== \"success\") {\n            this.setState({\"messages\": [{Type: \"danger\", Content: \"Fix errors\"}]});\n            return ;\n        }\n        user.updatePassword(this.state.password, function(success, messages) {\n            if (success === true) {\n                this.setState({messages: messages, password: \"\", password_confirm: \"\"});\n            } else {\n                this.setState({\n                    messages: messages,\n                    password: this.state.password,\n                    password_confirm: this.state.password_confirm\n                });\n            }\n        }.bind(this));\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type={msg.Type} message={msg.Content} />);\n        });\n        return (\n            <div className=\"col-md-3\">\n                <form onSubmit={this.handleSubmit} className=\"text-left\">\n                    <h1 className=\"page-header\">Reset Password</h1>\n                    {msgs}\n                    <Input label=\"New Password\" type=\"password\" ref=\"password\"\n                           placeholder=\"New password\" value={this.state.password}\n                           autoFocus hasFeedback bsStyle={this.validationPasswordState()}\n                           onChange={this.handleChange} />\n                    <Input label=\"Confirm Password\" type=\"password\" ref=\"password_confirm\"\n                           placeholder=\"Confirm Password\" value={this.state.password_confirm}\n                           hasFeedback bsStyle={this.validationPasswordConfirmState()}\n                           onChange={this.handleChange} />\n                    <Button type=\"submit\" bsStyle=\"success\">\n                        Update Password\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n});\n\nvar user = {\n    updatePassword: function(password, cb) {\n        if (!localStorage.id) {\n            if (cb) cb(false);\n            return ;\n        }\n        if (password.length < 1) {\n            if (cb) cb(false, [\"Password is required.\"]);\n            return ;\n        }\n        updatePassword(localStorage.id, password, function(res) {\n            if (res.update) {\n                if (cb) cb(true, [{Type: \"success\", Content: \"Successfully updated password.\"}]);\n            } else {\n                if (cb) cb(false, res.errors);\n            }\n        });\n    }\n};\n\nfunction updatePassword(userId, password, cb) {\n    var r = new XMLHttpRequest();\n    r.open(\"PATCH\", \"/api/v1/auth/user/\" + userId, true);\n    r.setRequestHeader(\"Content-Type\", \"application/json\");\n    r.onreadystatechange = function() {\n        if (r.readyState === 4) {\n            data = JSON.parse(r.responseText);\n            if (data.Result === \"success\") {\n                cb({update: true});\n            } else {\n                cb({update: false, errors: data.Messages});\n            }\n        }\n    };\n    r.send(JSON.stringify({password: password}));\n}\n","function passwordValid(password) {\n    if (password.length >= 8) {\n        return true;\n    }\n    return false;\n}\n","var DashboardHolder = React.createClass({\n    mixins: [Authentication],\n    getInitialState: function() {\n        return {\n            messages: []\n        };\n    },\n    render: function() {\n        var msgs = [];\n        this.state.messages.forEach(function(msg) {\n            msgs.push(<Messages type=\"error\" message={msg} />);\n        });\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 col-md-2 sidebar\">\n                        <ul className=\"nav nav-sidebar\">\n                            <li><Link to=\"d_overview\">Overview</Link></li>\n                            <li><Link to=\"d_servers\">Servers</Link></li>\n                            <li><Link to=\"d_apps\">Applications</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10\n                                    col-md-offset-2 main\">\n                        {msgs}\n                        <RouteHandler />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar DashboardOverview = React.createClass({\n    render: function() {\n        return (\n            <div>\n                Dashboard Overview...\n            </div>\n        );\n    }\n});\n\nvar DashboardServers = React.createClass({\n    render: function() {\n        return (\n            <div>\n                Dashboard Servers...\n            </div>\n        );\n    }\n});\n\nvar DashboardApps = React.createClass({\n    render: function() {\n        return (\n            <div>\n                Dashboard Apps...\n            </div>\n        );\n    }\n});\n","var SettingsHolder = React.createClass({\n    mixins: [Authentication],\n    render: function() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 col-md-2 sidebar\">\n                        <h1>Settings</h1>\n                        <ul className=\"nav nav-sidebar\">\n                            <li><Link to=\"s_commands\">Commands</Link></li>\n                            <li><Link to=\"s_contacts\">Contacts</Link></li>\n                            <li><Link to=\"s_servers\">Servers</Link></li>\n                            <li>\n                                <Link to=\"s_timeperiods\">Time Periods</Link>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10\n                                    col-md-offset-2 main\">\n                        {/*<Messages type=\"success\" message=\"Hello World\" />*/}\n                        <RouteHandler />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar SettingsCommands = React.createClass({\n    render: function() {\n        return (\n            <div>\n                Settings Commands...\n            </div>\n        );\n    }\n});\n\nvar SettingsServers = React.createClass({\n    render: function() {\n        return (\n            <div>\n                Settings Servers...\n            </div>\n        );\n    }\n});\n\nvar SettingsTimePeriods = React.createClass({\n    render: function() {\n        return (\n            <div>\n                Settings Time Periods...\n            </div>\n        );\n    }\n});\n","var contacts = {\n    get: function(cb) {\n        var r = new XMLHttpRequest();\n        r.open(\"GET\", \"/api/v1/contacts/\", true);\n        r.setRequestHeader(\"Content-Type\", \"application/json\");\n        r.setRequestHeader(\"X-Access-Token\", auth.getToken());\n        r.onreadystatechange = function() {\n            if (r.readyState === 4) {\n                data = JSON.parse(r.responseText);\n                if (data.Result === \"success\") {\n                    cb({data: data});\n                } else {\n                    cb({data: [], errors: data.Messages});\n                }\n            }\n        };\n        r.send();\n    }\n}\n\nvar SettingsContacts = React.createClass({\n    propTypes: {\n        contacts: React.PropTypes.array,\n        messages: React.PropTypes.array\n    },\n    getDefaultProps: function() {\n        contacts.get(function(data, messages) {\n            return {\n                contacts: data,\n                messages: messages\n            };\n        });\n    },\n    render: function() {\n        return (\n            <div>\n                Settings Contacts... we need more\n            </div>\n        );\n    }\n});\n\nvar SettingsContactsAdd = React.createClass({\n    render: function() {\n        return (\n            <div>\n                add the contacts here!!!\n            </div>\n        );\n    }\n});\n","var Router = ReactRouter,\n    Route = Router.Route,\n    Link = Router.Link,\n    RouteHandler = Router.RouteHandler,\n    DefaultRoute = Router.DefaultRoute,\n    Redirect = Router.Redirect,\n    NotFoundRoute = Router.NotFoundRoute,\n\n    // bootstrap\n    Input = ReactBootstrap.Input,\n    Button = ReactBootstrap.Button;\n\nvar App = React.createClass({\n    getInitialState: function() {\n        return {\n            loggedIn: auth.loggedIn(),\n            messages: []\n        };\n    },\n    setStateOnAuth: function(loggedIn, messages) {\n        this.setState({loggedIn: loggedIn, messages: messages});\n    },\n    componentWillMount: function() {\n        auth.onChange = this.setStateOnAuth;\n        auth.login();\n    },\n    render: function() {\n        var Navbar = ReactBootstrap.Navbar,\n            Nav = ReactBootstrap.Nav,\n            NavItem = ReactBootstrap.NavItem;\n        if (this.state.loggedIn) {\n            accessLink = <NavItem href=\"#/logout\">Sign Out</NavItem>;\n        } else {\n            accessLink = <NavItem href=\"#/login\">Sign In</NavItem>;\n        }\n        return (\n            <div>\n                <Navbar brand=\"ZenPager\" fixedTop fluid inverse>\n                    <Nav right>\n                        <NavItem href=\"#/dashboard\">Dashboard</NavItem>\n                        <NavItem href=\"#/settings\">Settings</NavItem>\n                        <NavItem href=\"#/profile\">Profile</NavItem>\n                        {accessLink}\n                    </Nav>\n                </Navbar>\n                <RouteHandler messages={this.state.messages} />\n            </div>\n        );\n    }\n});\n\nvar Messages = React.createClass({\n    getInitialState: function() {\n        return {\n            visible: true\n        };\n    },\n    handleDismiss: function() {\n        this.setState({visible: false});\n    },\n    render: function() {\n        if (this.state.visible) {\n            var Alert = ReactBootstrap.Alert;\n            return (\n                <Alert bsStyle={this.props.type}\n                       onDismiss={this.handleDismiss}>\n                    {this.props.message}\n                </Alert>\n            );\n        }\n        return <div></div>;\n    }\n});\n\nvar NotFound = React.createClass({\n    render: function() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-sm-offset-3 col-md-10\n                                    col-md-offset-2 main\">\n                        <h1>404 Not Found</h1>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nvar routes = (\n    <Route name=\"app\" path=\"/\" handler={App}>\n        <NotFoundRoute handler={NotFound} />\n        <Route name=\"login\" handler={Login} />\n        <Route name=\"logout\" handler={Logout} />\n        <Route name=\"dashboard\" handler={DashboardHolder}>\n            <Route name=\"d_overview\" path=\"overview\"\n                   handler={DashboardOverview} />\n            <Route name=\"d_servers\" path=\"servers\"\n                   handler={DashboardServers} />\n            <Route name=\"d_apps\" path=\"apps\" handler={DashboardApps} />\n            <Redirect from=\"/dashboard\" to=\"d_overview\" />\n        </Route>\n        <Route name=\"settings\" handler={SettingsHolder}>\n            <Route name=\"s_commands\" path=\"commands\"\n                   handler={SettingsCommands} />\n            <Route name=\"s_contacts\" path=\"contacts\"\n                   handler={SettingsContacts}>\n                <Route name=\"s_contacts_add\" path=\"add\"\n                       handler={SettingsContactsAdd} />\n            </Route>\n            <Route name=\"s_servers\" path=\"servers\" handler={SettingsServers} />\n            <Route name=\"s_timeperiods\" path=\"timeperiods\"\n                   handler={SettingsTimePeriods} />\n            <Redirect from=\"/settings\" to=\"s_commands\" />\n        </Route>\n        <Route name=\"profile\" handler={ProfileHolder}>\n            <Route name=\"p_password\" path=\"password\"\n                   handler={ProfilePassword} />\n            <Redirect from=\"/profile\" to=\"p_password\" />\n        </Route>\n        <Redirect from=\"/\" to=\"d_overview\" />\n    </Route>\n);\n\nRouter.run(routes, function(Handler) {\n    React.render(<Handler />, document.body);\n});\n"],"sourceRoot":"/source/"}